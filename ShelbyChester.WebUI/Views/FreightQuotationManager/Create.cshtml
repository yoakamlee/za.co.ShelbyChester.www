@model ShelbyChester.Core.Models.FreightQuotation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPageWithTheme.cshtml";
}
<head>

    <link href="~/Content/Create.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="UTF-8" />
    <meta name="keywords" content="Item Order Form Responsive Widget,Login form widgets, Sign up Web forms , Login signup Responsive web form,Flat Pricing table,Flat Drop downs,Registration Forms,News letter Forms,Elements" />
    <script>
        addEventListener("load", function () {
            setTimeout(hideURLbar, 0);
        }, false);

        function hideURLbar() {
            window.scrollTo(0, 1);
        }
    </script>

</head>

<div class="w3l-middle py-5">
    <div class="container py-xl-5 py-lg-3">
        <div class="welcome-left py-md-5 py-3">
            <h6></h6>
            <h4>Quote creation</h4>
        </div>
    </div>
</div>

<br />
<p style="align-content: center">
    <div class="txt-center">
        <h3 class="hny-title">Fill Out Quote</h3>
    </div>
</p>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="porduct-order-agile">
        <form action="#" method="post">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <p>Container Type</p>
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                <p>Price (R)</p>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <p>Quantity</p>
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <p>Weight</p>
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <p>Size</p>
                @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

